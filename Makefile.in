# DESTDIR will get overridden when it's is used with 'make'
# (e.g. `make DESTDIR=<dir> {install, uninstall}`).
#
# Important to remember that the data directory used by the binary will still
# be determined by which --prefix value is given to configure, no matter what
# DESTDIR is set to. Using the DESTDIR variable is primarily intended for
# packaging.
#
# If DESTDIR is used with 'install', the same value needs to be used for
# 'uninstall' to work.
# See https://www.gnu.org/prep/standards/html_node/DESTDIR.html for more information.
#

CARD_FILES =	\
	LICENSE	\
	1B.svg	\
	2B.svg	\
	AC.svg	\
	2C.svg	\
	3C.svg	\
	4C.svg	\
	5C.svg	\
	6C.svg	\
	7C.svg	\
	8C.svg	\
	9C.svg	\
	TC.svg	\
	JC.svg	\
	QC.svg	\
	KC.svg	\
	AH.svg	\
	2H.svg	\
	3H.svg	\
	4H.svg	\
	5H.svg	\
	6H.svg	\
	7H.svg	\
	8H.svg	\
	9H.svg	\
	TH.svg	\
	JH.svg	\
	QH.svg	\
	KH.svg	\
	AD.svg	\
	2D.svg	\
	3D.svg	\
	4D.svg	\
	5D.svg	\
	6D.svg	\
	7D.svg	\
	8D.svg	\
	9D.svg	\
	TD.svg	\
	JD.svg	\
	QD.svg	\
	KD.svg	\
	AS.svg	\
	2S.svg	\
	3S.svg	\
	4S.svg	\
	5S.svg	\
	6S.svg	\
	7S.svg	\
	8S.svg	\
	9S.svg	\
	TS.svg	\
	JS.svg	\
	QS.svg	\
	KS.svg	\

DOC_FILES =	\
	README.md	\
	CONTRIBUTING.md	\
	Cargo.toml	\
	LICENSE-MIT	\
	LICENSE-APACHE

DISTCLEAN_FILES =	\
	Makefile	\
	config.status	\
	config.log	\
	@PACKAGE_TARNAME@.desktop	\
	@PACKAGE_TARNAME@.appdata.xml	\
	src/config_h.rs

DIRS =	\
	$(DESTDIR)@DATADIR@/@PACKAGE_TARNAME@/cards	\
	$(DESTDIR)@DATADIR@/@PACKAGE_TARNAME@	\
	$(DESTDIR)@DATADIR@/pixmaps	\
	$(DESTDIR)@DATADIR@/applications	\
	$(DESTDIR)@DATADIR@/appdata	\
	$(DESTDIR)@DOCDIR@/@PACKAGE_TARNAME@	\
	$(DESTDIR)@DOCDIR@	\
	$(DESTDIR)@DATADIR@	\
	$(DESTDIR)@BINDIR@	\
	$(DESTDIR)@prefix@

release:
	if ! test $$(command -v cargo); then	\
		echo cargo binary not found;	\
		exit 1;	\
	fi
	cargo build --release

install: release
	install -D -s -m 0755 ./target/release/@PACKAGE_TARNAME@ -t $(DESTDIR)@BINDIR@
	install -D -m 0644 ./assets/cards/* -t $(DESTDIR)@DATADIR@/@PACKAGE_TARNAME@/cards
	install -D -m 0644 ./@PACKAGE_TARNAME@.appdata.xml -t $(DESTDIR)@DATADIR@/appdata
	install -D -m 0644 ./@PACKAGE_TARNAME@.desktop -t $(DESTDIR)@DATADIR@/applications
	install -D -m 0644 ./assets/@PACKAGE_TARNAME@.png -t $(DESTDIR)@DATADIR@/pixmaps
	install -d $(DESTDIR)@DOCDIR@/@PACKAGE_TARNAME@
	for file in $(DOC_FILES); do	\
		install -D -m 0644 $$file $(DESTDIR)@DOCDIR@/@PACKAGE_TARNAME@;	\
	done

install-strip: install
	strip $(DESTDIR)@BINDIR@/@PACKAGE_TARNAME@

uninstall:
	if test -f $(DESTDIR)@BINDIR@/@PACKAGE_TARNAME@; then	\
		$(RM) $(DESTDIR)@BINDIR@/@PACKAGE_TARNAME@;	\
	fi;	\
	if test -f $(DESTDIR)@DATADIR@/appdata/@PACKAGE_TARNAME@.appdata.xml; then	\
		$(RM) $(DESTDIR)@DATADIR@/appdata/@PACKAGE_TARNAME@.appdata.xml;	\
	fi;	\
	if test -f $(DESTDIR)@DATADIR@/applications/@PACKAGE_TARNAME@.desktop; then	\
		$(RM) $(DESTDIR)@DATADIR@/applications/@PACKAGE_TARNAME@.desktop;	\
	fi;	\
	if test -f $(DESTDIR)@DATADIR@/pixmaps/@PACKAGE_TARNAME@.png; then	\
		$(RM) $(DESTDIR)@DATADIR@/pixmaps/@PACKAGE_TARNAME@.png;	\
	fi;	\
	for card in $(CARD_FILES); do	\
		file="$(DESTDIR)@DATADIR@/@PACKAGE_TARNAME@/cards/"$$card;	\
		if test -f $$file; then	\
			$(RM) $$file;	\
		fi;	\
	done
	for file in $(DOC_FILES); do	\
		if test -f "$(DESTDIR)@DOCDIR@/@PACKAGE_TARNAME@/"$$file; then	\
			$(RM) "$(DESTDIR)@DOCDIR@/@PACKAGE_TARNAME@/"$$file;	\
		fi;	\
	done
	for dir in $(DIRS); do	\
		if test -d $$dir; then	\
			if test -z "$$(ls -1qA $$dir)"; then	\
				rmdir $$dir;	\
			fi;	\
		fi;	\
	done

distclean:
	for file in $(DISTCLEAN_FILES); do	\
		if test -f $$file; then	\
			$(RM) $$file;	\
		fi;	\
	done
